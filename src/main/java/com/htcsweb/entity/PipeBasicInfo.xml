<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.htcsweb.dao.PipeBasicInfoDao">

    <resultMap id="all" type="com.htcsweb.entity.PipeBasicInfo">
        <id property="id" column="id"></id>
        <result property="contract_no" column="contract_no"></result>
        <result property="pipe_no" column="pipe_no"></result>
        <result property="grade" column="grade"></result>
        <result property="od" column="od"></result>
        <result property="wt" column="wt"></result>
        <result property="p_length" column="p_length"></result>
        <result property="weight" column="weight"></result>
        <result property="pipe_making_lot_no" column="pipe_making_lot_no"></result>
        <result property="status" column="status"></result>
        <result property="heat_no" column="heat_no"></result>
        <result property="storage_stack" column="storage_stack"></result>
        <result property="stack_level" column="stack_level"></result>
        <result property="od_coating_date" column="od_coating_date"></result>
        <result property="id_coating_date" column="id_coating_date"></result>
        <result property="level_direction" column="level_direction"></result>
        <result property="level_sequence" column="level_sequence"></result>
        <result property="shipment_date" column="shipment_date"></result>
        <result property="last_accepted_status" column="last_accepted_status"></result>
        <result property="rebevel_mark" column="rebevel_mark"></result>
        <result property="odsampling_mark" column="odsampling_mark"></result>
        <result property="idsampling_mark" column="idsampling_mark"></result>
        <result property="od_dsc_sample_mark" column="od_dsc_sample_mark"></result>
        <result property="od_pe_sample_mark" column="od_pe_sample_mark"></result>
        <result property="id_glass_sample_mark" column="id_glass_sample_mark"></result>

    </resultMap>

    <select id="getPipeNumbers" resultType="com.htcsweb.entity.PipeBasicInfo">
        SELECT  p.*  from pipe_basic_info p INNER JOIN contract_info c ON
        p.contract_no=c.contract_no
        <where>
            <if test="pipestatus!=null and pipestatus!='' ">
                <foreach collection="pipestatus" item="item" open="status in (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="external_coatingtype!=null and external_coatingtype!=''">
                AND c.external_coating=#{external_coatingtype}
            </if>
            <if test="odsampling_mark!=null and odsampling_mark!=''">
                AND p.odsampling_mark=#{odsampling_mark}
            </if>
            <if test="od_dsc_sample_mark!=null and od_dsc_sample_mark!=''">
                AND p.od_dsc_sample_mark=#{od_dsc_sample_mark}
            </if>
            <if test="od_pe_sample_mark!=null and od_pe_sample_mark!=''">
                AND p.od_pe_sample_mark=#{od_pe_sample_mark}
            </if>
            <if test="idsampling_mark!=null and idsampling_mark!=''">
                AND p.idsampling_mark=#{idsampling_mark}
            </if>
            <if test="id_glass_sample_mark!=null and id_glass_sample_mark!=''">
                AND p.id_glass_sample_mark=#{id_glass_sample_mark}
            </if>
            <if test="rebevel_mark!=null and rebevel_mark!=''">
                AND p.rebevel_mark=#{rebevel_mark}
            </if>
        </where>

        ORDER BY id DESC
        limit 1000
    </select>

    <!--
    app 搜索算法
    排序规则：最新生产的最优先（比较时间为od打砂时间然后是id打砂时间，降序排列），其次是已生产完成的，最后是光管
    -->
    <select id="searchPipe" resultType="map">
        SELECT  pro.project_name,c.external_coating,c.internal_coating, p.*,s.status_name,prc.operation_time
        from pipe_basic_info p inner join pipe_status s on p.status=s.status_code
        inner join contract_info c on c.contract_no=p.contract_no
        inner join project_info pro on pro.project_no=c.project_no
        left join (select  pipe_no, max(operation_time) as operation_time from inspection_process_record_header hdr

        <!--<where>-->
            <!--<if test="process_code!=null and process_code!=''">-->
                <!--AND hdr.process_code=#{process_code}-->
            <!--</if>-->
            <!--<if test="mill_no!=null and mill_no!=''">-->
                <!--AND hdr.mill_no=#{mill_no}-->
            <!--</if>-->
        <!--</where>-->

        group by pipe_no) as prc
        on prc.pipe_no=p.pipe_no

        <where>
            <if test="pipe_no!=null and pipe_no!=''">
                AND p.pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <!--<if test="project_no!=null and project_no!=''">-->
                <!--AND pro.project_no=#{project_no}-->
            <!--</if>-->
        </where>
        ORDER BY prc.operation_time DESC
        limit #{skip},#{take}
    </select>


    <select id="searchPipeCount" resultType="int">
        SELECT  count(p.pipe_no)
        from pipe_basic_info p inner join pipe_status s on p.status=s.status_code
        inner join contract_info c on c.contract_no=p.contract_no
        inner join project_info pro on pro.project_no=c.project_no
        left join (select  pipe_no, max(operation_time) as operation_time from inspection_process_record_header hdr

        <!--<where>-->
            <!--<if test="process_code!=null and process_code!=''">-->
                <!--AND hdr.process_code=#{process_code}-->
            <!--</if>-->
            <!--<if test="mill_no!=null and mill_no!=''">-->
                <!--AND hdr.mill_no=#{mill_no}-->
            <!--</if>-->
        <!--</where>-->

        group by pipe_no) as prc
        on prc.pipe_no=p.pipe_no

        <where>
            <if test="pipe_no!=null and pipe_no!=''">
                AND p.pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <!--<if test="project_no!=null and project_no!=''">-->
                <!--AND pro.project_no=#{project_no}-->
            <!--</if>-->
        </where>
        ORDER BY prc.operation_time DESC
    </select>





     <select id="getPipeNumber" resultType="com.htcsweb.entity.PipeBasicInfo">
         SELECT *  from pipe_basic_info
         <where>
             <if test="pipe_no!=null and pipe_no!=''">
                 AND pipe_no =#{pipe_no}
             </if>
         </where>
         ORDER BY id DESC
         limit 1000
     </select>



    <select id="checkPipeForShipment" resultType="map">
        SELECT  p.*,c.project_no,c.external_coating,c.internal_coating,pro.project_name from pipe_basic_info p INNER JOIN contract_info c ON
        p.contract_no=c.contract_no
        inner join project_info pro on pro.project_no=c.project_no
        <where>
            AND status in ('odstockin','idstockin','bare1','bare2')
            <if test="pipe_no!=null and pipe_no!=''">
                AND p.pipe_no =#{pipe_no}
            </if>
        </where>
    </select>



    <!--
        得到项目2fbe 实验实验管的管号
    -->
    <select id="getAll2FBESamplePipe" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info p inner join contract_info c on c.contract_no=p.contract_no
        <where>
            ( odsampling_mark='1' or od_dsc_sample_mark='1' )
            <if test="project_no!=null and project_no!=''">
                AND project_no =#{project_no}
            </if>
        </where>
        ORDER BY pipe_no DESC
    </select>

    <!--
       得到项目3lpe 实验实验管的管号
   -->
    <select id="getAll3LPESamplePipe" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info p inner join contract_info c on c.contract_no=p.contract_no

        <where>
            ( odsampling_mark='1' or od_dsc_sample_mark='1' or od_pe_sample_mark='1' )
            <if test="project_no!=null and project_no!=''">
                AND project_no =#{project_no}
            </if>
        </where>
        ORDER BY pipe_no DESC
    </select>


    <!--
      得到项目Epoxy 实验实验管的管号
  -->
    <select id="getAllEpoxySamplePipe" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info p inner join contract_info c on c.contract_no=p.contract_no
        <where>
            ( idsampling_mark='1' or id_glass_sample_mark='1' )
            <if test="project_no!=null and project_no!=''">
                AND project_no =#{project_no}
            </if>
        </where>
        ORDER BY pipe_no DESC
    </select>



<!--
    得到2fbe常规实验实验管的管号
-->
    <select id="get2FBESamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND odsampling_mark='1'

            <![CDATA[ AND  pipe_no not in ( select pipe_no from lab_testing_2fbe where id<>#{id}) ]]>

            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>
        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>



    <!--
    得到2fbe DSC实验实验管的管号
-->
    <select id="get2FBEDSCSamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND od_dsc_sample_mark='1'

            <![CDATA[ AND  pipe_no not in ( select dsc_pipe_no from lab_testing_2fbe where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>
        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>


    <!--
得到3LPE DSC实验实验管的管号
-->
    <select id="get3LPEDSCSamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND od_dsc_sample_mark='1'

            <![CDATA[ AND  pipe_no not in ( select dsc_pipe_no from lab_testing_3lpe where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>
        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>

    <!--
    得到3lpe常规实验管的管号
-->
    <select id="get3LPESamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND odsampling_mark='1'

            <![CDATA[ AND  pipe_no not in ( select pipe_no from lab_testing_3lpe where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>
        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>


    <!--
得到3LPE PE实验实验管的管号
-->
    <select id="get3LPEPESamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND od_pe_sample_mark='1'

            <![CDATA[ AND  pipe_no not in ( select pe_pipe_no from lab_testing_3lpe where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(od_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>

        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>


    <!--
       得到Liquid Epoxy常规实验管的管号（钢片）
   -->
    <select id="getLiquidEpoxySamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND idsampling_mark='1'

            <![CDATA[ AND  pipe_no not in ( select pipe_no from lab_testing_liquid_epoxy where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(id_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(id_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>

        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>


    <!--
   得到Liquid Epoxy（玻璃片）实验管的管号
-->
    <select id="getLiquidEpoxyGlassSamplePipeNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info
        <where>
            AND id_glass_sample_mark='1'

            <![CDATA[ AND  pipe_no not in ( select glass_pipe_no from lab_testing_liquid_epoxy where id<>#{id}) ]]>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>

            <if test="begin_time!=null">
                <![CDATA[ AND DATE_FORMAT(id_coating_date,'%Y-%m-%d %H:%T:%s')>=DATE_FORMAT(#{begin_time},'%Y-%m-%d 00:00:00')]]>
            </if>
            <if test="end_time!=null">
                <![CDATA[ AND DATE_FORMAT(id_coating_date,'%Y-%m-%d %H:%T:%s')<DATE_FORMAT(DATE_ADD(#{end_time},INTERVAL 1 DAY),'%Y-%m-%d 00:00:00')]]>
            </if>


        </where>
        ORDER BY pipe_no DESC
        limit 1000
    </select>




    <select id="getODSamplePipeNumbers" resultType="com.htcsweb.entity.PipeBasicInfo">
--         select * from pipe_basic_info where  pipe_no in(
-- --         select pipe_no from id_coating_inspection_process ic where is_sample='1' UNION
--         select pipe_no from od_coating_2fbe_inspection_process ic where is_sample='1' UNION
--         select pipe_no from od_coating_3lpe_inspection_process ic where is_sample='1'
--         )
        select * from pipe_basic_info where odsampling_mark='0'
        <where>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no =#{pipe_no}
            </if>
        </where>
        ORDER BY id DESC
        limit 1000
    </select>


    <select id="getIDSamplePipeNumbers" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info where idsampling_mark='0'
        <where>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no =#{pipe_no}
            </if>
        </where>
        ORDER BY id DESC
        limit 1000
    </select>



    <select id="getNeedRebevelPipeNumbers" resultType="com.htcsweb.entity.PipeBasicInfo">
        select * from pipe_basic_info where rebevel_mark ='1'
        <where>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no =#{pipe_no}
            </if>
        </where>
        ORDER BY id DESC
        limit 1000
    </select>


    <!--<delete id="delOdCoatingProcess">-->
        <!--delete from od_coating_2fbe_process WHERE-->
        <!--<foreach collection="array" item="item" open="id in (" separator="," close=")">-->
            <!--#{item}-->
        <!--</foreach>-->
    <!--</delete>-->

    <select id="getCountODIDBarePipeInfoByLike" resultType="int">
        select count(*) from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>

            <if test="status!=null and status!=''">
                AND status = #{status}
            </if>
            AND (status = 'bare1' or status = 'bare2')
        </where>
    </select>


    <select id="getODIDBarePipeInfoByLike" resultType="map">
        select co.project_no,co.external_coating,co.internal_coating, project_name, p.*
        from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>

            <if test="status!=null and status!=''">
                AND status = #{status}
            </if>
            AND (status = 'bare1' or status = 'bare2' )
        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>

    <select id="getCount" resultType="int">
        select count(*) from pipe_basic_info
    </select>

    <select id="getCountAllByLike" resultType="int">
        select count(*) from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="status!=null and status!=''">
                AND p.status = #{status}
            </if>
        </where>
    </select>

    <select id="getCountODInspectedPipeInfoByLike" resultType="int">
        select count(*) from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            AND p.status = 'od6'
        </where>
    </select>

    <select id="getCountIDInspectedPipeInfoByLike" resultType="int">
        select count(*) from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            AND p.status = 'id6'
        </where>
    </select>




    <select id="getAllByLike" resultType="map">
        select co.project_no,co.external_coating,co.internal_coating, project_name, p.* from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="status!=null and status!=''">
                AND p.status = #{status}
            </if>
        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>



    <select id="getODInspectedPipeInfoByLike" resultType="map">
        select co.project_no,co.external_coating,co.internal_coating, project_name, p.* from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
               AND p.status = 'od6'
        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>


    <select id="getIDInspectedPipeInfoByLike" resultType="map">
        select co.project_no,co.external_coating,co.internal_coating, project_name, p.* from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            AND p.status = 'id6'
        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>

    <select id="getPipeInfoByNo" resultType="map">
--         Select p.id,p.odsampling_mark,p.idsampling_mark,p.shipment_date,p.rebevel_mark, c.center_line_color,c.pipe_end_color, c.external_coating,c.internal_coating,p.od_coating_date, p.id_coating_date, p.pipe_making_lot_no,client_spec, coating_standard,p.pipe_no,pro.project_no,pro.project_name,s.status_name,p.status,p.contract_no,p.grade,p.od,p.wt,p.p_length,p.weight,p.heat_no,p.storage_stack,p.stack_level,p.level_direction,p.level_sequence from pipe_basic_info p
--         LEFT join contract_info c on p.contract_no=c.contract_no
--         LEFT join project_info pro on c.project_no=pro.project_no
--         LEFT join pipe_status s on s.status_code=p.status
        Select  p.*,pro.acceptance_criteria_no, c.center_line_color,c.pipe_end_color, c.external_coating,c.internal_coating ,client_spec, coating_standard,pro.project_no,pro.project_name,s.status_name   from pipe_basic_info p
        LEFT join contract_info c on p.contract_no=c.contract_no
        LEFT join project_info pro on c.project_no=pro.project_no
        LEFT join pipe_status s on s.status_code=p.status
        WHERE p.pipe_no=#{pipe_no}
    </select>

    <select id="getPipeInfoById" resultType="map">
        --         Select p.id,p.odsampling_mark,p.idsampling_mark,p.shipment_date,p.rebevel_mark, c.center_line_color,c.pipe_end_color, c.external_coating,c.internal_coating,p.od_coating_date, p.id_coating_date, p.pipe_making_lot_no,client_spec, coating_standard,p.pipe_no,pro.project_no,pro.project_name,s.status_name,p.status,p.contract_no,p.grade,p.od,p.wt,p.p_length,p.weight,p.heat_no,p.storage_stack,p.stack_level,p.level_direction,p.level_sequence from pipe_basic_info p
        --         LEFT join contract_info c on p.contract_no=c.contract_no
        --         LEFT join project_info pro on c.project_no=pro.project_no
        --         LEFT join pipe_status s on s.status_code=p.status
        Select  p.*, c.center_line_color,c.pipe_end_color, c.external_coating,c.internal_coating ,client_spec, coating_standard,pro.project_no,pro.project_name,s.status_name   from pipe_basic_info p
        LEFT join contract_info c on p.contract_no=c.contract_no
        LEFT join project_info pro on c.project_no=pro.project_no
        LEFT join pipe_status s on s.status_code=p.status
        WHERE p.id=#{id}
    </select>
    <update id="updatePipeBasicInfo" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set contract_no=#{contract_no},pipe_no=#{pipe_no},grade=#{grade},od=#{od},wt=#{wt},p_length=#{p_length}, weight=#{weight},pipe_making_lot_no=#{pipe_making_lot_no},status=#{status}, heat_no=#{heat_no},storage_stack=#{storage_stack},stack_level=#{stack_level},od_coating_date=#{od_coating_date},id_coating_date=#{id_coating_date},level_direction=#{level_direction},level_sequence=#{level_sequence},shipment_date=#{shipment_date},last_accepted_status=#{last_accepted_status},rebevel_mark=#{rebevel_mark},
        odsampling_mark=#{odsampling_mark},idsampling_mark=#{idsampling_mark},od_dsc_sample_mark=#{od_dsc_sample_mark},od_pe_sample_mark=#{od_pe_sample_mark},id_glass_sample_mark=#{id_glass_sample_mark} WHERE id=#{id}
    </update>

    <insert id="addPipeBasicInfo" parameterType="com.htcsweb.entity.PipeBasicInfo">
        INSERT INTO pipe_basic_info(contract_no,pipe_no,grade,od,wt,p_length,weight,pipe_making_lot_no,status,heat_no,storage_stack,stack_level,od_coating_date,id_coating_date,level_direction,level_sequence,shipment_date,last_accepted_status,rebevel_mark,odsampling_mark,idsampling_mark,od_dsc_sample_mark,od_pe_sample_mark,id_glass_sample_mark)
        VALUES (#{contract_no},#{pipe_no},#{grade},#{od},#{wt},#{p_length},#{weight},#{pipe_making_lot_no},#{status},#{heat_no},#{storage_stack},#{stack_level},#{od_coating_date},#{id_coating_date},#{level_direction},#{level_sequence},#{shipment_date},#{last_accepted_status},#{rebevel_mark},#{odsampling_mark},#{idsampling_mark},#{od_dsc_sample_mark},#{od_pe_sample_mark},#{id_glass_sample_mark})
    </insert>

    <delete id="delPipeBasicInfo">
        delete from pipe_basic_info WHERE
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="odProductStockin" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set last_accepted_status='odstockin',status='odstockin',storage_stack=#{storage_stack}, stack_level=#{stack_level},level_direction=#{level_direction},level_sequence=#{level_sequence} WHERE  status='od6' AND
        id=#{id}
    </update>

    <update id="idProductStockin" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set last_accepted_status='idstockin',status='idstockin', storage_stack=#{storage_stack}, stack_level=#{stack_level},level_direction=#{level_direction},level_sequence=#{level_sequence}  WHERE  status='id6' AND
        id=#{id}
    </update>
    <!--<update id="odProductStockin" parameterType="com.htcsweb.entity.PipeBasicInfo">-->
        <!--UPDATE pipe_basic_info set last_accepted_status='odstockin',status='odstockin',storage_stack=#{storage_stack}, stack_level=#{stack_level},level_direction=#{level_direction},level_sequence=#{level_sequence} WHERE  status='od6' AND-->
        <!--<foreach collection="array" item="item" open="id in (" separator="," close=")">-->
            <!--#{item}-->
        <!--</foreach>-->
    <!--</update>-->

    <!--<update id="idProductStockin" parameterType="com.htcsweb.entity.PipeBasicInfo">-->
        <!--UPDATE pipe_basic_info set last_accepted_status='idstockin',status='idstockin', storage_stack=#{storage_stack}, stack_level=#{stack_level},level_direction=#{level_direction},level_sequence=#{level_sequence}  WHERE  status='id6' AND-->
        <!--<foreach collection="array" item="item" open="id in (" separator="," close=")">-->
            <!--#{item}-->
        <!--</foreach>-->
    <!--</update>-->


    <update id="SetToODBare" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set last_accepted_status='bare1',status='bare1' WHERE  status='bare2' AND
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="SetToIDBare" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set last_accepted_status='bare2',status='bare2' WHERE   status='bare1' AND
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </update>


    <select id="getCoatedStockinPipeInfoByLike" resultType="map">
        select co.project_no,co.external_coating,co.internal_coating, project_name, p.* from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="status!=null and status!=''">
                AND p.status = #{status}
            </if>
            AND (p.status = 'odstockin' or p.status = 'idstockin' or p.status = 'bare1' or p.status = 'bare2')

            AND p.rebevel_mark <![CDATA[ <> ]]>  '1'

        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>
    <select id="getCountCoatedStockinPipeInfoByLike" resultType="int">
        select count(*) from pipe_basic_info p
        left join contract_info co on p.contract_no=co.contract_no
        left join  project_info pr on co.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND co.project_no LIKE CONCAT('%',#{project_no},'%')
            </if>

            <if test="contract_no!=null and contract_no!=''">
                AND p.contract_no LIKE CONCAT('%',#{contract_no},'%')
            </if>
            <if test="pipe_no!=null and pipe_no!=''">
                AND pipe_no LIKE CONCAT('%',#{pipe_no},'%')
            </if>
            <if test="status!=null and status!=''">
                AND p.status = #{status}
            </if>
            AND (p.status = 'odstockin' or p.status = 'idstockin')
        </where>
    </select>


    <update id="coatingProductStockout" parameterType="com.htcsweb.entity.PipeBasicInfo">
        UPDATE pipe_basic_info set last_accepted_status='out',status='out', shipment_date=sysdate() WHERE  (status='odstockin' or status='idstockin' or status='bare1' or status='bare2') AND
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </update>


    <select id="isPipeODProcessed"  resultType="int">
        select count(*) from pipe_basic_info
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
                AND od_coating_date is not null
        </where>
    </select>

    <select id="isPipeIDProcessed"  resultType="int">
        select count(*) from pipe_basic_info
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            AND id_coating_date is not null
        </where>
    </select>
    <select id="getPipeNoByContractNo" resultType="java.lang.String">
        SELECT pipe_no from pipe_basic_info WHERE
        <foreach collection="array" item="item" open="contract_no in (" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <update id="InStoageTransfer">
        UPDATE pipe_basic_info set storage_stack=#{storage_stack}, stack_level=#{stack_level},level_direction=#{level_direction},level_sequence=#{level_sequence} WHERE
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateSamplingMark">
        UPDATE pipe_basic_info set odsampling_mark='1' where pipe_no=#{pipe_no}
    </update>




    <select id="getFirstPipeNoByProjectNo" resultType="com.htcsweb.entity.PipeBasicInfo">
        select p.* from pipe_basic_info p
        inner join contract_info c on p.contract_no=c.contract_no
        inner join  project_info pr on c.project_no=pr.project_no
        <where>
            <if test="project_no!=null and project_no!=''">
                AND c.project_no =#{project_no}
            </if>
            <if test="external_coating!=null and external_coating!=''">
                AND c.external_coating=#{external_coating}
            </if>
            <if test="internal_coating!=null and internal_coating!=''">
                AND c.internal_coating=#{internal_coating}
            </if>
        </where>
        order by p.id asc
        limit 1
    </select>

    <!--获取外防涂层不合格原因记录-->
    <select id="getODCoatingRejectData" resultType="map">
        select reject_reason, count(header_code) as total_count from
        (
        select it.item_value as reject_reason, it.inspection_process_record_header_code  as header_code
        from inspection_process_record_item it
        inner join inspection_process_record_header hdr on hdr.inspection_process_record_header_code=it.inspection_process_record_header_code
        inner join pipe_basic_info p on p.pipe_no=hdr.pipe_no
        inner join contract_info c on c.contract_no=p.contract_no
        inner join dynamic_measurement_item di on it.item_code=di.item_code
        where c.project_no=#{project_no} AND  it.item_code='coating_reject_reason' AND it.item_value is not null
        <![CDATA[ AND it.item_value <> '' AND it.item_value <> '合格' ]]>
        AND
        (hdr.process_code='od_coating_inspection'
        or hdr.process_code='od_final_inspection'
        )
        group by hdr.inspection_process_record_header_code
        ) reject_data
        group by reject_reason
    </select>

    <!--获取内防涂层不合格原因记录-->
    <select id="getIDCoatingRejectData" resultType="map">
        select reject_reason, count(header_code) as total_count from
        (
        select it.item_value as reject_reason, it.inspection_process_record_header_code  as header_code
        from inspection_process_record_item it
        inner join inspection_process_record_header hdr on hdr.inspection_process_record_header_code=it.inspection_process_record_header_code
        inner join pipe_basic_info p on p.pipe_no=hdr.pipe_no
        inner join contract_info c on c.contract_no=p.contract_no
        inner join dynamic_measurement_item di on it.item_code=di.item_code
        where c.project_no=#{project_no} AND  it.item_code='coating_reject_reason' AND it.item_value is not null
        <![CDATA[ AND it.item_value <> '' AND it.item_value <> '合格' ]]>
        AND
        (hdr.process_code='id_coating_inspection'
        or hdr.process_code='id_final_inspection'
        )
        group by hdr.inspection_process_record_header_code
        ) reject_data
        group by reject_reason

    </select>

    <!--获取外防涂层总厚度记录-->
    <select id="getODTotalCoatingThicknessData" resultType="map">
        select item_value  as total_coating_thickness
        from inspection_process_record_item it
        inner join inspection_process_record_header hdr on hdr.inspection_process_record_header_code=it.inspection_process_record_header_code
        inner join pipe_basic_info p on p.pipe_no=hdr.pipe_no
        inner join contract_info c on c.contract_no=p.contract_no
        inner join dynamic_measurement_item di on it.item_code=di.item_code
        where c.project_no=#{project_no} AND  it.item_code='total_coating_thickness' AND it.item_value is not null
         <![CDATA[ AND it.item_value <> ''  ]]>
        AND
        hdr.process_code='od_coating_inspection'

        group by hdr.inspection_process_record_header_code


    </select>

    <!--获取内防涂层干膜厚度记录-->
    <select id="getIDDryFilmThicknessData" resultType="map">
        select item_value  as dry_film_thickness
        from inspection_process_record_item it
        inner join inspection_process_record_header hdr on hdr.inspection_process_record_header_code=it.inspection_process_record_header_code
        inner join pipe_basic_info p on p.pipe_no=hdr.pipe_no
        inner join contract_info c on c.contract_no=p.contract_no
        inner join dynamic_measurement_item di on it.item_code=di.item_code
        where c.project_no=#{project_no} AND  it.item_code='dry_film_thickness' AND it.item_value is not null
         <![CDATA[ AND it.item_value <> ''  ]]>
        AND
        hdr.process_code='id_final_inspection'
        group by hdr.inspection_process_record_header_code

    </select>


</mapper>